name: Binary Release

on:
  workflow_run:
    workflows: ["Cargo Check"]
    types: 
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'  # Ensures submodules are fetched

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Run dev setup script
        run: |
          cd "$GITHUB_WORKSPACE/aptos-pre-core"
          chmod -R 755 ./scripts
          echo "yes" | ./scripts/dev_setup.sh

      - name: Build subnet binaries
        run: |
          cd "$GITHUB_WORKSPACE/subnet"
          cargo build --release
          
      - name: Archive binaries
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: |
            $GITHUB_WORKSPACE/subnet/target/release/*

      - name: Set up cross-compilation environment
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Build binaries for macOS
        run: |
          cd "$GITHUB_WORKSPACE/subnet"
          docker buildx create --name mybuilder
          docker buildx use mybuilder
          docker buildx inspect --bootstrap
          cargo build --release --target=x86_64-apple-darwin

      - name: Archive macOS binaries
        uses: actions/upload-artifact@v2
        with:
          name: macos-binaries
          path: |
            $GITHUB_WORKSPACE/subnet/target/x86_64-apple-darwin/release/*

      - name: Build binaries for Linux arm64
        run: |
          cd "$GITHUB_WORKSPACE/subnet"
          docker buildx create --name mybuilder
          docker buildx use mybuilder
          docker buildx inspect --bootstrap
          cargo build --release --target=aarch64-unknown-linux-gnu

      - name: Archive Linux arm64 binaries
        uses: actions/upload-artifact@v2
        with:
          name: linux-arm64-binaries
          path: |
            $GITHUB_WORKSPACE/subnet/target/aarch64-unknown-linux-gnu/release/*

      - name: Build binaries for Linux x86_64
        run: |
          cd "$GITHUB_WORKSPACE/subnet"
          docker buildx create --name mybuilder
          docker buildx use mybuilder
          docker buildx inspect --bootstrap
          cargo build --release --target=x86_64-unknown-linux-gnu

      - name: Archive Linux x86_64 binaries
        uses: actions/upload-artifact@v2
        with:
          name: linux-x86_64-binaries
          path: |
            $GITHUB_WORKSPACE/subnet/target/x86_64-unknown-linux-gnu/release/*

      - name: Build binaries for Windows
        run: |
          cd "$GITHUB_WORKSPACE/subnet"
          docker buildx create --name mybuilder
          docker buildx use mybuilder
          docker buildx inspect --bootstrap
          cargo build --release --target=x86_64-pc-windows-gnu

      - name: Archive Windows binaries
        uses: actions/upload-artifact@v2
        with:
          name: windows-binaries
          path: |
            $GITHUB_WORKSPACE/subnet/target/x86_64-pc-windows-gnu/release/*.exe
